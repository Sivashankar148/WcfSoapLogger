//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommonClient
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherReport", Namespace="http://wcf-soap-logger.org/weather-service")]
    public partial class WeatherReport : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateTimeField;
        
        private float HumidityField;
        
        private long IdField;
        
        private string LocationField;
        
        private float PressureField;
        
        private float TemperatureField;
        
        private float WindDirectionField;
        
        private float WindSpeedField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime
        {
            get
            {
                return this.DateTimeField;
            }
            set
            {
                this.DateTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Humidity
        {
            get
            {
                return this.HumidityField;
            }
            set
            {
                this.HumidityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Pressure
        {
            get
            {
                return this.PressureField;
            }
            set
            {
                this.PressureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Temperature
        {
            get
            {
                return this.TemperatureField;
            }
            set
            {
                this.TemperatureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float WindDirection
        {
            get
            {
                return this.WindDirectionField;
            }
            set
            {
                this.WindDirectionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float WindSpeed
        {
            get
            {
                return this.WindSpeedField;
            }
            set
            {
                this.WindSpeedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wcf-soap-logger.org/weather-service", ConfigurationName="CommonClient.IWeatherService")]
    public interface IWeatherService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/SendReport", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/SendReportResponse")]
        long SendReport(CommonClient.WeatherReport report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/SendReport", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/SendReportResponse")]
        System.Threading.Tasks.Task<long> SendReportAsync(CommonClient.WeatherReport report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/GetLastReportByLocatio" +
            "n", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/GetLastReportByLocatio" +
            "nResponse")]
        CommonClient.WeatherReport GetLastReportByLocation(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/GetLastReportByLocatio" +
            "n", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/GetLastReportByLocatio" +
            "nResponse")]
        System.Threading.Tasks.Task<CommonClient.WeatherReport> GetLastReportByLocationAsync(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/GetForecastByLocation", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/GetForecastByLocationR" +
            "esponse")]
        CommonClient.WeatherReport[] GetForecastByLocation(string location, int days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf-soap-logger.org/weather-service/IWeatherService/GetForecastByLocation", ReplyAction="http://wcf-soap-logger.org/weather-service/IWeatherService/GetForecastByLocationR" +
            "esponse")]
        System.Threading.Tasks.Task<CommonClient.WeatherReport[]> GetForecastByLocationAsync(string location, int days);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : CommonClient.IWeatherService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<CommonClient.IWeatherService>, CommonClient.IWeatherService
    {
        
        public WeatherServiceClient()
        {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public long SendReport(CommonClient.WeatherReport report)
        {
            return base.Channel.SendReport(report);
        }
        
        public System.Threading.Tasks.Task<long> SendReportAsync(CommonClient.WeatherReport report)
        {
            return base.Channel.SendReportAsync(report);
        }
        
        public CommonClient.WeatherReport GetLastReportByLocation(string location)
        {
            return base.Channel.GetLastReportByLocation(location);
        }
        
        public System.Threading.Tasks.Task<CommonClient.WeatherReport> GetLastReportByLocationAsync(string location)
        {
            return base.Channel.GetLastReportByLocationAsync(location);
        }
        
        public CommonClient.WeatherReport[] GetForecastByLocation(string location, int days)
        {
            return base.Channel.GetForecastByLocation(location, days);
        }
        
        public System.Threading.Tasks.Task<CommonClient.WeatherReport[]> GetForecastByLocationAsync(string location, int days)
        {
            return base.Channel.GetForecastByLocationAsync(location, days);
        }
    }
}
